// <auto-generated />
using System;
using Ekklesia.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ekklesia.Data.Migrations
{
    [DbContext(typeof(EkklesiaContext))]
    [Migration("20200223024425_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ekklesia.Data.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ActivityTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityTypeId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("Ekklesia.Data.Models.ActivityAssistant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<int>("EntityTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ContactId");

                    b.HasIndex("EntityTypeId");

                    b.ToTable("ActivityAssistant");
                });

            modelBuilder.Entity("Ekklesia.Data.Models.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActivityType","Configuration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "CULT",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Culto"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "CAMPAIGN",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Campaña"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "VIGIL",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Vigilia"
                        },
                        new
                        {
                            Id = 4,
                            Alias = "PRAY_CULT",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Culto de Oración"
                        },
                        new
                        {
                            Id = 5,
                            Alias = "LADY_CULT",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Culto de Damas"
                        },
                        new
                        {
                            Id = 6,
                            Alias = "GENTLEMAN_CULT",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Culto de Caballeros"
                        },
                        new
                        {
                            Id = 7,
                            Alias = "CHILDREN_CULT",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Culto de Niños"
                        },
                        new
                        {
                            Id = 8,
                            Alias = "OTHER",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Otro"
                        });
                });

            modelBuilder.Entity("Ekklesia.Data.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Asset","Configuration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "CHAIR",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Silla"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "TABLE",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Mesa"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "MICROPHONE",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Micrófono"
                        },
                        new
                        {
                            Id = 4,
                            Alias = "SPEAKER",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Bocina"
                        },
                        new
                        {
                            Id = 5,
                            Alias = "PROJECTOR",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Poyector"
                        },
                        new
                        {
                            Id = 6,
                            Alias = "PIANO",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Piano"
                        },
                        new
                        {
                            Id = 7,
                            Alias = "DRUM",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Tambora"
                        },
                        new
                        {
                            Id = 8,
                            Alias = "SAUCER",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Platillo"
                        },
                        new
                        {
                            Id = 9,
                            Alias = "OTHER",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Otro"
                        });
                });

            modelBuilder.Entity("Ekklesia.Data.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("BaptismDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CellPhone")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<byte[]>("ContactImage")
                        .HasColumnType("varbinary(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("ConversionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("HomePhone")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocalMember")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Ekklesia.Data.Models.EntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EntityType","Configuration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "PERSON",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Persona"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "CHURCH",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Iglesia"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio"
                        },
                        new
                        {
                            Id = 4,
                            Alias = "OTHER",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Otro"
                        });
                });

            modelBuilder.Entity("Ekklesia.Data.Models.MemberMinistryPosition", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("MinistryId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("MemberId", "MinistryId", "PositionId");

                    b.HasIndex("MinistryId");

                    b.HasIndex("PositionId");

                    b.ToTable("MemberMinistryPosition");
                });

            modelBuilder.Entity("Ekklesia.Data.Models.Ministry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ministry","Configuration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "PRAY_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio de Oración"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "LADY_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio de Damas"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "GENTLEMAN_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio de Caballeros"
                        },
                        new
                        {
                            Id = 4,
                            Alias = "YOUNG_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio de Jóvenes"
                        },
                        new
                        {
                            Id = 5,
                            Alias = "YOUNG_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio de Adolecentes"
                        },
                        new
                        {
                            Id = 6,
                            Alias = "TEEN_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio de Niños"
                        },
                        new
                        {
                            Id = 7,
                            Alias = "CHILDREN_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio de Evangelismo y Misiones"
                        },
                        new
                        {
                            Id = 8,
                            Alias = "EVANGELISM_MISSION_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio de Finanzas"
                        },
                        new
                        {
                            Id = 9,
                            Alias = "FINANCIAL_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio de Diaconía"
                        },
                        new
                        {
                            Id = 10,
                            Alias = "DIAKONIA_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio de Casados"
                        },
                        new
                        {
                            Id = 11,
                            Alias = "MARRIED_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ministerio de Adoración"
                        },
                        new
                        {
                            Id = 12,
                            Alias = "WORSHIP_MINISTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Otro"
                        });
                });

            modelBuilder.Entity("Ekklesia.Data.Models.Movement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("Movement");
                });

            modelBuilder.Entity("Ekklesia.Data.Models.MovementDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<double>("AssetQuantity")
                        .HasColumnType("float");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<int>("MovementId")
                        .HasColumnType("int");

                    b.Property<int>("MovementTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("ContactId");

                    b.HasIndex("MovementId");

                    b.HasIndex("MovementTypeId");

                    b.ToTable("MovementDetail");
                });

            modelBuilder.Entity("Ekklesia.Data.Models.MovementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MovementType","Configuration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "ENTRY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Ingreso"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "EGRESS",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Egreso"
                        });
                });

            modelBuilder.Entity("Ekklesia.Data.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Position","Configuration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "SHEPHERD",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Pastor/a"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "DIRECTOR",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Director/a"
                        },
                        new
                        {
                            Id = 3,
                            Alias = "SUBDIRECTOR",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Sub-Director/a"
                        },
                        new
                        {
                            Id = 4,
                            Alias = "SECRETARY",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Secretario/a"
                        },
                        new
                        {
                            Id = 5,
                            Alias = "OTHER",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Otro"
                        });
                });

            modelBuilder.Entity("Ekklesia.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int?>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role","Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "ADMIN",
                            Description = "Administrador",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Alias = "OPERATOR",
                            InsertDate = new DateTime(2020, 2, 22, 22, 44, 24, 619, DateTimeKind.Local).AddTicks(8739),
                            InsertUserId = 0,
                            IsActive = true,
                            Name = "Operador/a"
                        });
                });

            modelBuilder.Entity("Ekklesia.Data.Models.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Tenant","Security");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Iglesia El Buen Pastor",
                            Name = "El Buen Pastor"
                        });
                });

            modelBuilder.Entity("Ekklesia.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InsertUserId")
                        .HasColumnType("int");

                    b.Property<bool>("MustChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(255)")
                        .HasMaxLength(255);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UserImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User","Security");
                });

            modelBuilder.Entity("Ekklesia.Data.Models.UserTenant", b =>
                {
                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TenantId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTenant","Security");
                });

            modelBuilder.Entity("Ekklesia.Data.Models.Activity", b =>
                {
                    b.HasOne("Ekklesia.Data.Models.ActivityType", "ActivityType")
                        .WithMany("Activities")
                        .HasForeignKey("ActivityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ekklesia.Data.Models.ActivityAssistant", b =>
                {
                    b.HasOne("Ekklesia.Data.Models.Activity", "Activity")
                        .WithMany("Assistants")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ekklesia.Data.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("Ekklesia.Data.Models.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ekklesia.Data.Models.MemberMinistryPosition", b =>
                {
                    b.HasOne("Ekklesia.Data.Models.Contact", "Member")
                        .WithMany("MinistriesPositions")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ekklesia.Data.Models.Ministry", "Ministry")
                        .WithMany()
                        .HasForeignKey("MinistryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ekklesia.Data.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ekklesia.Data.Models.Movement", b =>
                {
                    b.HasOne("Ekklesia.Data.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId");
                });

            modelBuilder.Entity("Ekklesia.Data.Models.MovementDetail", b =>
                {
                    b.HasOne("Ekklesia.Data.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ekklesia.Data.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");

                    b.HasOne("Ekklesia.Data.Models.Movement", "Movement")
                        .WithMany()
                        .HasForeignKey("MovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ekklesia.Data.Models.MovementType", "MovementType")
                        .WithMany()
                        .HasForeignKey("MovementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ekklesia.Data.Models.User", b =>
                {
                    b.HasOne("Ekklesia.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ekklesia.Data.Models.UserTenant", b =>
                {
                    b.HasOne("Ekklesia.Data.Models.Tenant", "Tenant")
                        .WithMany("Users")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ekklesia.Data.Models.User", "User")
                        .WithMany("Tenants")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
